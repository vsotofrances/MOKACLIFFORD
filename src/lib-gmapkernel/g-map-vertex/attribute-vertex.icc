/*
 * lib-gmapkernel : Un noyau de 3-G-cartes et des opérations.
 * Copyright (C) 2004, Moka Team, Université de Poitiers, Laboratoire SIC
 *               http://www.sic.sp2mi.univ-poitiers.fr/
 * Copyright (C) 2009, Guillaume Damiand, CNRS, LIRIS,
 *               guillaume.damiand@liris.cnrs.fr, http://liris.cnrs.fr/
 *
 * This file is part of lib-gmapkernel
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//******************************************************************************
#include "attributes-id.hh"
//******************************************************************************
INLINE
CAttributeVertex::CAttributeVertex()
  : CAttribute(), CVertex()
{
}
//******************************************************************************
INLINE
CAttributeVertex::CAttributeVertex(TCoordinate Ax, TCoordinate Ay, TCoordinate Az)
  : CAttribute(), CVertex(Ax, Ay, Az)
{
}
//******************************************************************************
INLINE
CAttributeVertex::CAttributeVertex(const CVertex & AVertex)
  : CAttribute(), CVertex(AVertex)
{
}
//******************************************************************************
INLINE
CAttributeVertex::CAttributeVertex(const CAttributeVertex & AAttributeVertex)
  : CAttribute(AAttributeVertex), CVertex(AAttributeVertex)
{
}
//******************************************************************************
INLINE
CAttributeVertex::~CAttributeVertex()
{
}
//******************************************************************************
INLINE
TAttributeId CAttributeVertex::getType() const
{
  return ATTRIBUTE_VERTEX;
}
//******************************************************************************
INLINE
CAttribute * CAttributeVertex::copy() const
{
  return new CAttributeVertex(*this);
}
//******************************************************************************
INLINE
void CAttributeVertex::destroy()
{
  delete this;
}
//******************************************************************************
INLINE
void CAttributeVertex::save(std::ostream & /*AStream*/) const
{
}
//******************************************************************************
INLINE
void CAttributeVertex::load(std::istream & /*AStream*/)
{
}
//******************************************************************************
INLINE
std::ostream & operator<<(std::ostream & AStream,
			  const CAttributeVertex & AVertex)
{
  return AStream << (CVertex) AVertex;
}
//******************************************************************************
